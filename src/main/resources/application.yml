spring:
  main:
    web-application-type: servlet
  # --- Production Database Configuration using Environment Variables ---
  datasource:
    # The URL, username, and password will be provided by Render's environment variables.
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true # You can set this to false in production to clean up logs
    hibernate:
      # This setting ensures the database schema is updated automatically on startup.
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

# --- Application-Specific Configuration ---
app:
  # The JWT secret and expiration will be set via environment variables.
  jwtSecret: ${APP_JWT_SECRET}
  jwtExpirationMs: ${APP_JWT_EXPIRATION_MS:86400000} # Defaults to 24 hours if not set
  # CORS origins will be set via an environment variable to allow your deployed frontend.
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}

# --- Server Port Configuration ---
server:
  # Render expects applications to run on port 10000 by default, but it can often detect 8080.
  # For best results, we can explicitly set it via an environment variable.
  port: ${PORT:8080}

# --- Logging Configuration ---
logging:
  level:
    root: INFO # Set to INFO for cleaner production logs
    org.springframework: INFO
    org.hibernate.SQL: INFO # Set to ERROR or remove to hide SQL queries in logs
